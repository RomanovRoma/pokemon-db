{"version":3,"sources":["components/pokemon-list-item/index.js","components/pokemon-list-item/pokemon-list-item.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/pokemon-service-context/pokemon-service-context.js","components/hoc/with-pokemon-service.js","actions/index.js","utils/compose.js","components/pokemon-list/pokemon-list.js","components/pages/home-page.js","services/pokemon-service.js","components/pokemon-details/index.js","components/pokemon-details/pokemon-details.js","components/header/index.js","components/header/header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/pokemon-list.js","reducers/pokemon-details.js","reducers/index.js","store.js","index.js"],"names":["PokemonListItem","pokemon","id","name","className","src","alt","charAt","toUpperCase","slice","Spinner","ErrorIndicator","React","createContext","PokemonServiceProvider","Provider","PokemonServiceConsumer","Consumer","withPokemonService","Wrapped","props","pokemonService","fetchAllPokemons","dispatch","type","getAllPokemons","then","data","payload","catch","err","compose","func","comp","reduceRight","wrapped","f","PokemonList","this","pokemons","loading","error","map","onClick","onPokemonSelected","Component","connect","pokemonList","withRouter","history","pokemonName","push","PokemonService","_apiBase","_transformPokemons","url","match","_transformPokemon","experience","base_experience","height","weight","types","abilities","stats","fetch","res","ok","Math","random","Error","status","json","getResource","results","PokemonDetails","state","getPokemon","setState","updatePokemon","prevProps","nameCapitalized","it","index","array","length","ability","Header","to","href","App","role","path","component","HomePage","exact","render","params","ErrorBoundry","hasError","children","updatePokemonList","action","undefined","updatePokemonDetails","pokemonDetails","reducer","store","createStore","ReactDOM","value","document","getElementById"],"mappings":"0WAEeA,G,MCCS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjBC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,KACZ,OACE,sBAAKC,UAAU,oBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBACIA,UAAU,gBACVC,IAAG,wDAAmDH,EAAnD,QACHI,IAAKH,MAGX,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,eAAf,SAA+BD,EAAKI,OAAO,GAAGC,cAAgBL,EAAKM,MAAM,YCUlEC,G,MArBC,WACd,OACE,qBAAKN,UAAU,wCAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+BCjBOO,G,MCCQ,WACrB,OAAO,2C,UCCLC,IAAMC,gBAFEC,E,EAAVC,SACUC,E,EAAVC,SCgBaC,EAhBY,kBAAM,SAACC,GAEhC,OAAO,SAACC,GACN,OACE,cAACJ,EAAD,UAEI,SAACK,GACC,OAAQ,cAACF,EAAD,2BAAaC,GAAb,IACEC,eAAgBA,WCShCC,EAAmB,SAACD,EAAgBE,GAAjB,OAA8B,WACrDA,EAbO,CACLC,KAAM,+BAaRH,EACGI,iBACAC,MAAK,SAACC,GAAD,OAAUJ,EAvBX,CACLC,KAAM,6BACNI,QAqBiDD,OAChDE,OAAM,SAACC,GAAD,OAASP,EAXX,CACLC,KAAM,6BACNI,QASiDE,SCtBtCC,EAJC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAa,SAACC,GAC5B,OAAOD,EAAKE,aAAY,SAACC,EAASC,GAAV,OAAgBA,EAAED,KAAUF,KCWhDI,G,wLASFC,KAAKlB,MAAME,qB,+BAwCH,IAAD,SAS8BgB,KAAKlB,MAAlCmB,EATD,EASCA,SAAUC,EATX,EASWA,QAASC,EATpB,EASoBA,MAE3B,OAAID,EACK,cAAC,EAAD,IAGLC,EACK,cAAC,EAAD,IAIP,oBAAIrC,UAAU,uBAAd,SACGmC,EAASG,KAAI,SAACzC,GACb,OACE,oBACEG,UAAU,kBAEVuC,QAAS,kBAAM,EAAKvB,MAAMwB,kBAAkB3C,EAAQE,OAHtD,SAKE,cAAC,EAAD,CACEF,QAASA,EACT0C,QAAS,kBAAM,EAAKvB,MAAMwB,kBAAkB3C,EAAQE,UALjDF,EAAQE,e,GA1ED0C,cAmGXd,IACbb,IACA4B,aAZsB,SAAC,GAAiD,IAAD,IAA9CC,YACzB,MAAO,CAAER,SAD8D,EAAhCA,SACpBC,QADoD,EAAtBA,QACrBC,MAD2C,EAAbA,UAIjC,SAAClB,EAAD,GAAiC,IAArBF,EAAoB,EAApBA,eACrC,MAAO,CACLC,iBAAkBA,EAAiBD,EAAgBE,OAIxCQ,CAGbM,GCnGaW,eAXE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjB,OACE,qBAAK7C,UAAU,WAAf,SACE,cAAC,EAAD,CACEwC,kBAAmB,SAACM,GAClBD,EAAQE,KAAR,WAAiBD,Y,yBCTNE,E,iDACnBC,SAAW,4B,KA0BXC,mBAAqB,SAACrD,GAIpB,MAAO,CACLC,GAHSD,EAAQsD,IAAIC,MADN,iBACsB,GAIrCrD,KAAMF,EAAQE,O,KAIlBsD,kBAAoB,SAACxD,GACnB,MAAO,CACLC,GAAID,EAAQC,GACZC,KAAMF,EAAQE,KACduD,WAAYzD,EAAQ0D,gBACpBC,OAAQ3D,EAAQ2D,OAChBC,OAAQ5D,EAAQ4D,OAChBC,MAAO7D,EAAQ6D,MACfC,UAAW9D,EAAQ8D,UACnBC,MAAO/D,EAAQ+D,Q,iGA3CDT,G,uFACEU,MAAM,GAAD,OAAI3B,KAAKe,UAAT,OAAoBE,I,WAArCW,E,QAEGC,MAAMC,KAAKC,SAAW,K,sBACvB,IAAIC,MAAJ,0BAA6Bf,EAA7B,sBAA8CW,EAAIK,S,uBAE7CL,EAAIM,O,sTAIClC,KAAKmC,YAAL,a,cAAZP,E,yBACCA,EAAIQ,QAAQhC,IAAIJ,KAAKgB,qB,gLAQbJ,G,uFACOZ,KAAKmC,YAAL,mBAA6BvB,EAA7B,M,cAAhBjD,E,yBACCqC,KAAKmB,kBAAkBxD,I,8GCtBnB0E,G,kNCUbtD,eAAiB,IAAI+B,E,EAErBwB,MAAQ,CACN3E,QAAS,M,8DAGM,IAAD,OACNiD,EAAgBZ,KAAKlB,MAArB8B,YACHA,GAILZ,KAAKjB,eAAewD,WAAW3B,GAAaxB,MAAK,SAACzB,GAChD,EAAK6E,SAAS,CACZ7E,iB,0CAMJqC,KAAKyC,kB,yCAGYC,GACb1C,KAAKlB,MAAM8B,cAAgB8B,EAAU9B,aACvCZ,KAAKyC,kB,+BAcA,MAuBHzC,KAAKlB,MAAMnB,QAPbC,EAhBK,EAgBLA,GACAC,EAjBK,EAiBLA,KACAuD,EAlBK,EAkBLA,WACAE,EAnBK,EAmBLA,OACAC,EApBK,EAoBLA,OACAC,EArBK,EAqBLA,MACAC,EAtBK,EAsBLA,UAGIkB,EAAkB9E,EAAKI,OAAO,GAAGC,cAAgBL,EAAKM,MAAM,GAElE,OACE,sBAAKL,UAAU,uBAAf,UACE,qBACEA,UAAU,gBACVC,IAAG,wDAAmDH,EAAnD,QACHI,IAAK2E,IAGP,sBAAK7E,UAAU,YAAf,UACE,6BAAK6E,IACL,qBAAI7E,UAAU,8BAAd,UACE,qBAAIA,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,6BACA,+BAAOsD,OAET,qBAAItD,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,oBACA,+BAAOwD,OAET,qBAAIxD,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,oBACA,+BAAOyD,OAET,qBAAIzD,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,mBACC0D,EAAMpB,KAAI,SAACwC,EAAIC,EAAOC,GACrB,OACE,+BACGD,IAAUC,EAAMC,OAAS,EAAzB,UACMH,EAAG1D,KAAKrB,KADd,gBAEM+E,EAAG1D,KAAKrB,OAHN+E,EAAG1D,KAAKrB,YAQzB,qBAAIC,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,uBACC2D,EAAUrB,KAAI,SAACwC,EAAI1D,EAAM4D,GACxB,OACE,oBAAIhF,UAAU,kBAAd,SACE,+BAAO8E,EAAGI,QAAQnF,QADiB+E,EAAGI,QAAQnF,yB,GA1GrC0C,cCTd0C,G,MCEA,WACb,OACE,qBAAKnF,UAAU,gBAAf,SACE,cAAC,IAAD,CAAMoF,GAAG,IAAT,SACE,qBAAKpF,UAAU,OAAOqF,KAAK,IAA3B,8BCNOC,G,MCQH,WAcR,OACE,uBAAMC,KAAK,OAAOvF,UAAU,YAA5B,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwF,KAAK,IAAIC,UAAWC,EAAUC,OAAK,IAC1C,cAAC,IAAD,CAAOH,KAAK,SAASI,OAAQ,YAAc,IACb7F,EADY,EAAXqD,MACcyC,OAAf9F,KACR,OAAO,cAAC,EAAD,CAAgB+C,YAAa/C,iBC9BvD+F,E,4MCGbtB,MAAQ,CACNuB,UAAU,G,kEAIV7D,KAAKwC,SAAS,CACZqB,UAAU,M,+BAKZ,OAAI7D,KAAKsC,MAAMuB,SACN,cAAC,EAAD,IAGF7D,KAAKlB,MAAMgF,a,GAjBoBvD,a,QC+B3BwD,EAlCW,SAACzB,EAAO0B,GAChC,QAAcC,IAAV3B,EACF,MAAO,CACLrC,SAAU,GACVC,SAAS,EACTC,MAAO,MAIX,OAAQ6D,EAAO9E,MACb,IAAK,6BACH,MAAO,CACLe,SAAU,GACVC,SAAS,EACTC,MAAO,MAEX,IAAK,6BACH,MAAO,CACLF,SAAU+D,EAAO1E,QACjBY,SAAS,EACTC,MAAO,MAEX,IAAK,6BACH,MAAO,CACLF,SAAU,GACVC,SAAS,EACTC,MAAO6D,EAAO1E,SAGlB,QACE,OAAOgD,EAAM7B,cCIJyD,EAlCc,SAAC5B,EAAO0B,GACnC,QAAcC,IAAV3B,EACF,MAAO,CACL3E,QAAS,GACTuC,SAAS,EACTC,MAAO,MAIX,OAAQ6D,EAAO9E,MACb,IAAK,wBACH,MAAO,CACLvB,QAAS,GACTuC,SAAS,EACTC,MAAO,MAEX,IAAK,wBACH,MAAO,CACLxC,QAASqG,EAAO1E,QAChBY,SAAS,EACTC,MAAO,MAEX,IAAK,wBACH,MAAO,CACLxC,QAAS,GACTuC,SAAS,EACTC,MAAO6D,EAAO1E,SAGlB,QACE,OAAOgD,EAAM6B,iBCnBJC,EARC,SAAC9B,EAAO0B,GAEtB,MAAO,CACLvD,YAAasD,EAAkBzB,EAAO0B,GACtCG,eAAgBD,EAAqB5B,EAAO0B,KCDjCK,EAFDC,YAAYF,GCOpBrF,EAAiB,IAAI+B,EAI3ByD,IAASb,OACP,cAAC,IAAD,CAAUW,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC7F,EAAD,CAAwBgG,MAAOzF,EAA/B,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKN0F,SAASC,eAAe,W","file":"static/js/main.cdc92f61.chunk.js","sourcesContent":["import PokemonListItem from './pokemon-list-item'\n\nexport default PokemonListItem","import React from 'react'\nimport './pokemon-list-item.css'\n\nconst PokemonListItem = ({ pokemon }) => {\n  const { id, name } = pokemon\n  return (\n    <div className=\"pokemon-list-item\">\n      <div className=\"pokemon-img\">\n        <img\n            className=\"pokemon-image\"\n            src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n            alt={name}\n          />\n      </div>\n      <div className=\"pokemon-details\">\n        <div className=\"pokemon-name\">{name.charAt(0).toUpperCase() + name.slice(1)}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonListItem","import React from 'react'\n\nimport './spinner.css'\n\nconst Spinner = () => {\n  return (\n    <div className=\"loadingio-spinner-spinner-3oqlumcrxit\">\n      <div className=\"ldio-mzy1cv9q2v9\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner","import ErrorIndicator from './error-indicator'\n\nexport default ErrorIndicator","import React from 'react'\nimport './error-indicator.css'\n\nconst ErrorIndicator = () => {\n  return <div>Error!</div>\n}\n\nexport default ErrorIndicator","import React from 'react'\n\nconst {\n  Provider: PokemonServiceProvider,\n  Consumer: PokemonServiceConsumer\n} = React.createContext()\n\nexport {\n  PokemonServiceProvider,\n  PokemonServiceConsumer\n}","import React from 'react'\nimport { PokemonServiceConsumer } from '../pokemon-service-context'\n\n\nconst withPokemonService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <PokemonServiceConsumer>\n        {\n          (pokemonService) => {\n            return (<Wrapped {...props}\n                      pokemonService={pokemonService} />)\n          }\n        }\n      </PokemonServiceConsumer>\n    )\n  }\n}\n\nexport default withPokemonService","\nconst fetchAllPokemonsSuccess = (newPokemons) => {\n  return {\n    type: 'FETCH_ALL_POKEMONS_SUCCESS',\n    payload: newPokemons\n  }\n}\n\nconst fetchAllPokemonsRequest = () => {\n  return {\n    type: 'FETCH_ALL_POKEMONS_REQUEST'\n  };\n}\n\nconst fetchAllPokemonsFailure = (error) => {\n  return {\n    type: \"FETCH_ALL_POKEMONS_FAILURE\",\n    payload: error\n  };\n}\n\nconst fetchAllPokemons = (pokemonService, dispatch) => () => {\n  dispatch(fetchAllPokemonsRequest());\n  pokemonService\n    .getAllPokemons()\n    .then((data) => dispatch(fetchAllPokemonsSuccess(data)))\n    .catch((err) => dispatch(fetchAllPokemonsFailure(err)));\n};\n\n\nconst fetchPokemonSuccess = (newPokemon) => {\n  return {\n    type: \"FETCH_POKEMON_SUCCESS\",\n    payload: newPokemon,\n  };\n};\n\nconst fetchPokemonRequest = () => {\n  return {\n    type: \"FETCH_POKEMON_REQUEST\",\n  };\n};\n\nconst fetchPokemonFailure = (error) => {\n  return {\n    type: \"FETCH_POKEMON_FAILURE\",\n    payload: error,\n  };\n};\n\nconst fetchPokemon = (pokemonService, dispatch) => (id) => {\n  dispatch(fetchPokemonRequest())\n    pokemonService.getPokemon(id)\n      .then((data) => dispatch(fetchPokemonSuccess(data)))\n      .catch((err) => dispatch(fetchPokemonFailure(err)));\n};\n\nexport {\n  fetchAllPokemons,\n  fetchPokemon\n};","const compose = (...func) => (comp) => {\n  return func.reduceRight((wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport PokemonListItem from '../pokemon-list-item'\nimport Spinner from \"../spinner/spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nimport { withPokemonService } from '../hoc'\nimport { fetchAllPokemons } from \"../../actions\";\nimport { compose } from '../../utils'\nimport './pokemon-list.css'\n\nclass PokemonList extends Component {\n\n  // pokemonService = new PokemonService()\n\n  // state = {\n  //   pokemonList: null\n  // }\n\n  componentDidMount() {\n    this.props.fetchAllPokemons()\n    // const {\n    //   pokemonService,\n    //   fetchAllPokemonsSuccess,\n    //   fetchAllPokemonsRequest,\n    //   fetchAllPokemonsFailure } = this.props\n    // fetchAllPokemonsRequest()\n    // pokemonService.getAllPokemons()\n    //   .then((data) => fetchAllPokemonsSuccess(data))\n    //   .catch((err) => fetchAllPokemonsFailure(err))\n\n    // this.pokemonService\n    //   .getAllPokemons()\n    //   .then((pokemonList) => {\n    //     this.setState({\n    //       pokemonList\n    //     })\n    //   })\n  }\n\n  // renderItems(arr) {\n  //   return arr.map(({id, name}) => {\n  //     const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\n  //     return (\n  //       <div\n  //         className=\"list-group-item\"\n  //         key={nameCapitalized}\n  //         onClick={() => this.props.onItemSelected(name)}\n  //       >\n  //         {nameCapitalized}\n  //         <img\n  //           className=\"pokemon-image\"\n  //           src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n  //           alt={nameCapitalized}\n  //         />\n  //       </div>\n  //     );\n  //   })\n  // }\n\n  render() {\n\n    // const { pokemonList } = this.state\n\n    // if (!pokemonList) {\n    //   return <Spinner />\n    // }\n\n    // const items = this.renderItems(pokemonList)\n    const { pokemons, loading, error } = this.props\n\n    if (loading) {\n      return <Spinner />\n    }\n\n    if (error) {\n      return <ErrorIndicator />\n    }\n\n    return (\n      <ul className=\"item-list list-group\">\n        {pokemons.map((pokemon) => {\n          return (\n            <li\n              className=\"list-group-item\"\n              key={pokemon.name}\n              onClick={() => this.props.onPokemonSelected(pokemon.name)}\n            >\n              <PokemonListItem\n                pokemon={pokemon}\n                onClick={() => this.props.onPokemonSelected(pokemon.name)}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = ({ pokemonList: {pokemons, loading, error} }) => {\n  return { pokemons, loading, error }\n}\n\nconst mapDispatchToProps = (dispatch, {pokemonService}) => {\n  return {\n    fetchAllPokemons: fetchAllPokemons(pokemonService, dispatch)\n  }\n}\n\nexport default compose(\n  withPokemonService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(PokemonList)","import React from 'react'\nimport PokemonList from '../pokemon-list/pokemon-list'\nimport { withRouter } from 'react-router-dom'\n\nconst HomePage = ({history}) => {\n  return (\n    <div className=\"col-md-6\">\n      <PokemonList\n        onPokemonSelected={(pokemonName) => {\n          history.push(`/${pokemonName}`);\n        }} />\n    </div>\n  );\n}\n\nexport default withRouter(HomePage)","export default class PokemonService {\n  _apiBase = \"https://pokeapi.co/api/v2\";\n  debugger;\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok || Math.random() > 0.99) {\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\n    }\n    return await res.json();\n  }\n\n  async getAllPokemons() {\n    const res = await this.getResource(`/pokemon/`);\n    return res.results.map(this._transformPokemons);\n  }\n\n  // async getPokemon(id) {\n  //   const pokemon = await this.getResource(`/pokemon/${id}/`);\n  //   return this._transformPokemon(pokemon);\n  // }\n\n  async getPokemon(pokemonName) {\n    const pokemon = await this.getResource(`/pokemon/${pokemonName}/`);\n    return this._transformPokemon(pokemon);\n  }\n\n  _transformPokemons = (pokemon) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    const id = pokemon.url.match(idRegExp)[1];\n\n    return {\n      id,\n      name: pokemon.name,\n    };\n  };\n\n  _transformPokemon = (pokemon) => {\n    return {\n      id: pokemon.id,\n      name: pokemon.name,\n      experience: pokemon.base_experience,\n      height: pokemon.height,\n      weight: pokemon.weight,\n      types: pokemon.types,\n      abilities: pokemon.abilities,\n      stats: pokemon.stats,\n    };\n  };\n}","import PokemonDetails from './pokemon-details'\n\nexport default PokemonDetails","import React, { Component } from 'react'\n// import { connect } from 'react-redux'\n// import { withPokemonService } from '../hoc'\n// import { fetchPokemon } from '../../actions'\n// import { compose } from '../../utils'\nimport PokemonService from \"../../services/pokemon-service\";\n\n// import ErrorIndicator from '../error-indicator/error-indicator'\n// import Spinner from '../spinner/spinner'\nimport './pokemon-details.css'\n\nclass PokemonDetails extends Component {\n  pokemonService = new PokemonService();\n\n  state = {\n    pokemon: null,\n  };\n\n  updatePokemon() {\n    const { pokemonName } = this.props;\n    if (!pokemonName) {\n      return;\n    }\n\n    this.pokemonService.getPokemon(pokemonName).then((pokemon) => {\n      this.setState({\n        pokemon,\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.updatePokemon();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.pokemonName !== prevProps.pokemonName) {\n      this.updatePokemon();\n    }\n  }\n\n  // componentDidMount() {\n  //   this.props.fetchPokemon();\n  // }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.pokemonId !== prevProps.pokemonId) {\n  //     this.updatePokemon();\n  //   }\n  // }\n\n  render() {\n    // const { pokemon, loading, error } = this.props;\n\n    // if (loading) {\n    //   return <Spinner />;\n    // }\n\n    // if (error) {\n    //   return <ErrorIndicator />;\n    // }\n\n    // if (!pokemon) {\n    //   return <span>Select a pokemon from list</span>;\n    // }\n\n    const {\n      id,\n      name,\n      experience,\n      height,\n      weight,\n      types,\n      abilities,\n    } = this.props.pokemon;\n\n    const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\n\n    return (\n      <div className=\"pokemon-details card\">\n        <img\n          className=\"pokemon-image\"\n          src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n          alt={nameCapitalized}\n        />\n\n        <div className=\"card-body\">\n          <h4>{nameCapitalized}</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Base Experience</span>\n              <span>{experience}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Height</span>\n              <span>{height}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Weight</span>\n              <span>{weight}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Types</span>\n              {types.map((it, index, array) => {\n                return (\n                  <span key={it.type.name}>\n                    {index !== array.length - 1\n                      ? `${it.type.name}, `\n                      : `${it.type.name}`}\n                  </span>\n                );\n              })}\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Abilities</span>\n              {abilities.map((it, type, array) => {\n                return (\n                  <li className=\"list-group-item\" key={it.ability.name}>\n                    <span>{it.ability.name}</span>\n                  </li>\n                );\n              })}\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = ({ pokemonDetails: { pokemon, loading, error } }) => {\n//   return { pokemon, loading, error };\n// };\n\n// const mapDispatchToProps = (dispatch, { pokemonService }) => {\n//   return {\n//     fetchPokemon: fetchPokemon(pokemonService, dispatch),\n//   };\n// };\n// export default compose(\n//   withPokemonService(),\n//   connect(mapStateToProps, mapDispatchToProps)\n// )(PokemonDetails);\nexport default PokemonDetails","import Header from './header'\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './header.css'\n\nconst Header = () => {\n  return (\n    <div className=\"header d-flex\">\n      <Link to=\"/\">\n        <div className=\"logo\" href=\"#\">Pokemon DB</div>\n      </Link>\n    </div>\n  )\n}\n\nexport default Header","import App from './app'\n\nexport default App","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { HomePage } from '../pages'\n\nimport Header from '../header'\n// import PokemonList from '../pokemon-list'\nimport PokemonDetails from '../pokemon-details'\n\nimport './app.css'\n\nconst App = () => {\n\n  // state ={\n  //   selectedPokemon: null,\n  //   selectedAbility: 5\n  // }\n\n  // onPokemonSelected = (id) => {\n  //   this.setState({\n  //     selectedPokemon: id\n  //   })\n  // }\n\n  // render() {\n    return (\n      <main role=\"main\" className=\"container\">\n        <Header />\n        <div className=\"row mb2\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/:name\" render={({match}) => {\n                                  const { name } = match.params\n                                  return <PokemonDetails pokemonName={name} />;\n                                }} />\n          </Switch>\n        </div>\n      </main>\n    );\n      // <div>\n      //   <Header />\n      //   <div className=\"row mb2\">\n      //     <div className=\"col-md-6\">\n      //       {/* <PokemonList onItemSelected={this.onPokemonSelected} /> */}\n      //     </div>\n      //     <div className=\"col-md-6\">\n      //       {/* <PokemonDetails pokemonId={this.state.selectedPokemon} /> */}\n      //     </div>\n      //   </div>\n      // </div>\n    // );\n  // }\n}\n\nexport default App","import ErrorBoundry from './error-boundry'\n\nexport default ErrorBoundry","import React, { Component } from 'react'\nimport ErrorIndicator from '../error-indicator'\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  }\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n\n    return this.props.children\n  }\n}","const updatePokemonList = (state, action) => {\n  if (state === undefined) {\n    return {\n      pokemons: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  switch (action.type) {\n    case \"FETCH_ALL_POKEMONS_REQUEST\":\n      return {\n        pokemons: [],\n        loading: true,\n        error: null,\n      };\n    case \"FETCH_ALL_POKEMONS_SUCCESS\":\n      return {\n        pokemons: action.payload,\n        loading: false,\n        error: null,\n      };\n    case \"FETCH_ALL_POKEMONS_FAILURE\":\n      return {\n        pokemons: [],\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state.pokemonList;\n  }\n};\n\nexport default updatePokemonList\n","const updatePokemonDetails = (state, action) => {\n  if (state === undefined) {\n    return {\n      pokemon: {},\n      loading: true,\n      error: null,\n    };\n  }\n\n  switch (action.type) {\n    case \"FETCH_POKEMON_REQUEST\":\n      return {\n        pokemon: {},\n        loading: true,\n        error: null,\n      };\n    case \"FETCH_POKEMON_SUCCESS\":\n      return {\n        pokemon: action.payload,\n        loading: false,\n        error: null,\n      };\n    case \"FETCH_POKEMON_FAILURE\":\n      return {\n        pokemon: {},\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state.pokemonDetails;\n  }\n};\n\nexport default updatePokemonDetails\n","import updatePokemonList from './pokemon-list'\nimport updatePokemonDetails from './pokemon-details'\n\nconst reducer = (state, action) => {\n\n  return {\n    pokemonList: updatePokemonList(state, action),\n    pokemonDetails: updatePokemonDetails(state, action)\n  }\n}\n\nexport default reducer","import { createStore } from 'redux'\n\nimport reducer from './reducers'\n\nconst store = createStore(reducer)\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport App from \"./components/app\";\nimport ErrorBoundry from './components/error-boundry'\nimport PokemonService from './services/pokemon-service'\nimport { PokemonServiceProvider } from './components/pokemon-service-context'\nimport store from './store'\n\nconst pokemonService = new PokemonService()\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <PokemonServiceProvider value={pokemonService}>\n        <Router>\n          <App />\n        </Router>\n      </PokemonServiceProvider>\n    </ErrorBoundry>\n  </Provider>\n  , document.getElementById(\"root\"));"],"sourceRoot":""}